--- a/Makefile
+++ b/Makefile
@@ -26,7 +26,8 @@
 #     * DOCKER_IMAGE_NAME - adguard/adguard-home
 #     * DOCKER_OUTPUT - type=image,name=adguard/adguard-home,push=true
 
-GOPATH := $(shell go env GOPATH)
+PATH := $PATH
+GOPATH := $(shell $GO env GOPATH)
 PWD := $(shell pwd)
 TARGET=AdGuardHome
 BASE_URL="https://static.adguard.com/adguardhome/$(CHANNEL)"
@@ -63,22 +64,10 @@ ifneq ($(CHANNEL),edge)
 endif
 
 # Version properties
-COMMIT=$(shell git rev-parse --short HEAD)
-TAG_NAME=$(shell git describe --abbrev=0)
-RELEASE_VERSION=$(TAG_NAME)
-SNAPSHOT_VERSION=$(RELEASE_VERSION)-SNAPSHOT-$(COMMIT)
+RELEASE_VERSION=$PKG_VERSION
 
 # Set proper version
-VERSION=
-ifeq ($(TAG_NAME),$(shell git describe --abbrev=4))
-	ifeq ($(CHANNEL),edge)
-		VERSION=$(SNAPSHOT_VERSION)
-	else
-		VERSION=$(RELEASE_VERSION)
-	endif
-else
-	VERSION=$(SNAPSHOT_VERSION)
-endif
+VERSION=$(RELEASE_VERSION)
 
 # Docker target parameters
 DOCKER_IMAGE_NAME ?= adguardhome-dev
@@ -121,20 +110,20 @@ init:
 	git config core.hooksPath .githooks
 
 build: client_with_deps
-	go mod download
-	PATH=$(GOPATH)/bin:$(PATH) go generate ./...
-	CGO_ENABLED=0 go build -ldflags="-s -w -X main.version=$(VERSION) -X main.channel=$(CHANNEL) -X main.goarm=$(GOARM)"
+	$GO mod download
+	PATH=$(GOPATH)/bin:$(PATH) $GO generate ./...
+	CGO_ENABLED=0 $GO build -ldflags="-s -w -X main.version=$(VERSION) -X main.channel=$(CHANNEL) -X main.goarm=$(GOARM)"
 	PATH=$(GOPATH)/bin:$(PATH) packr clean
 
 client:
-	npm --prefix client run build-prod
+	$NPM --prefix client run build-prod
 
 client_with_deps:
-	npm --prefix client ci
-	npm --prefix client run build-prod
+	$NPM --prefix client ci
+	$NPM --prefix client run build-prod
 
 client-watch:
-	npm --prefix client run watch
+	$NPM --prefix client run watch
 
 docker:
 	DOCKER_CLI_EXPERIMENTAL=enabled \
@@ -154,7 +143,7 @@ lint: lint-js lint-go
 
 lint-js: dependencies
 	@echo Running js linter
-	npm --prefix client run lint
+	$NPM --prefix client run lint
 
 lint-go:
 	@echo Running go linter
@@ -162,17 +151,17 @@ lint-go:
 
 test:
 	@echo Running JS unit-tests
-	npm run test --prefix client
+	$NPM run test --prefix client
 	@echo Running Go unit-tests
-	go test $(TEST_FLAGS) -v -coverprofile=coverage.txt -covermode=atomic ./...
+	$GO test $(TEST_FLAGS) -v -coverprofile=coverage.txt -covermode=atomic ./...
 
 ci: client_with_deps
-	go mod download
+	$GO mod download
 	$(MAKE) test
 
 dependencies:
-	npm --prefix client ci
-	go mod download
+	$NPM --prefix client ci
+	$GO mod download
 
 clean:
 	# make build output
@@ -206,7 +195,7 @@ docker-multi-arch:
 	@echo docker run --name "adguard-home" -p 53:53/tcp -p 53:53/udp -p 80:80/tcp -p 443:443/tcp -p 853:853/tcp -p 3000:3000/tcp $(DOCKER_IMAGE_NAME)
 
 release: client_with_deps
-	go mod download
+	$GO mod download
 	@echo Starting release build: version $(VERSION), channel $(CHANNEL)
 	CHANNEL=$(CHANNEL) $(GORELEASER_COMMAND)
 	$(call write_version_file,$(VERSION))

--- a/Makefile
+++ b/Makefile
@@ -19,7 +19,8 @@
 #     * DOCKER_IMAGE_NAME - adguard/adguard-home
 #     * DOCKER_OUTPUT - type=image,name=adguard/adguard-home,push=true
 
-GOPATH := $(shell go env GOPATH)
+PATH:=$PATH
+GOPATH := $(shell $GO env GOPATH)
 PWD := $(shell pwd)
 TARGET=AdGuardHome
 BASE_URL="https://static.adguard.com/adguardhome/$(CHANNEL)"
@@ -99,15 +100,15 @@ init:
 	git config core.hooksPath .githooks
 
 build: dependencies client
-	PATH=$(GOPATH)/bin:$(PATH) go generate ./...
-	CGO_ENABLED=0 go build -ldflags="-s -w -X main.version=$(VERSION) -X main.channel=$(CHANNEL) -X main.goarm=$(GOARM)"
+	PATH=$(GOPATH)/bin:$(PATH) $GO generate ./...
+	CGO_ENABLED=0 $GO build -ldflags="-s -w -X main.version=$(VERSION) -X main.channel=$(CHANNEL) -X main.goarm=$(GOARM)"
 	PATH=$(GOPATH)/bin:$(PATH) packr clean
 
 client:
-	npm --prefix client run build-prod
+	$NPM --prefix client run build-prod
 
 client-watch:
-	npm --prefix client run watch
+	$NPM --prefix client run watch
 
 docker:
 	DOCKER_CLI_EXPERIMENTAL=enabled \
@@ -127,7 +128,7 @@ lint: lint-js lint-go
 
 lint-js:
 	@echo Running js linter
-	npm --prefix client run lint
+	$NPM --prefix client run lint
 
 lint-go:
 	@echo Running go linter
@@ -135,15 +136,15 @@ lint-go:
 
 test:
 	@echo Running JS unit-tests
-	npm run test --prefix client
+	$NPM run test --prefix client
 	@echo Running Go unit-tests
 	go test -race -v -bench=. -coverprofile=coverage.txt -covermode=atomic ./...
 
 ci: dependencies client test
 
 dependencies:
-	npm --prefix client ci
-	go mod download
+	$NPM --prefix client ci
+	$GO mod download
 
 clean:
 	# make build output
